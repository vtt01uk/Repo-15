var LocalStrategy   = require('passport-local').Strategy;
var OrgUser = require('../models/organisation');
var Sponsor = require('../models/sponsor');
var bCrypt = require('bcrypt-nodejs');

module.exports = function(passport){

	passport.use('login', new LocalStrategy({
            passReqToCallback : true
        },
        function(req, username, password, done) { 
            // check in mongo if a user with username exists or not
            OrgUser.findOne({ 'username' :  username }, 
                function(err, user) {
                    // In case of any error, return using the done method
                    if (err)
                        return done(err);
                    // Username does not exist, log the error and redirect back
                    if (!orguser){
                        console.log('Organisation Not Found with username '+username);
                        return done(null, false, req.flash('message', 'Organisation Not found.'));                 
                    }
                    // User exists but wrong password, log the error 
                    if (!isValidPassword(orguser, password)){
                        console.log('Invalid Password');
                        return done(null, false, req.flash('message', 'Invalid Password')); // redirect back to login page
                    }
                    // User and password both match, return user from done method
                    // which will be treated like success
                    return done(null, orguser);
                }
            );

        })
    );


    var isValidPassword = function(orguser, password){
        return bCrypt.compareSync(password, orguser.password);
    }
    
}

module.exports = function(passport){

    passport.use('login', new LocalStrategy({
            passReqToCallback : true
        },
        function(req, username, password, done) { 
            // check in mongo if a user with username exists or not
            Sponsor.findOne({ 'username' :  username }, 
                function(err, user) {
                    // In case of any error, return using the done method
                    if (err)
                        return done(err);
                    // Username does not exist, log the error and redirect back
                    if (!sponsor){
                        console.log('Sponsor Not Found with username '+username);
                        return done(null, false, req.flash('message', 'Sponsor Not found.'));                 
                    }
                    // User exists but wrong password, log the error 
                    if (!isValidPassword(sponsor, password)){
                        console.log('Invalid Password');
                        return done(null, false, req.flash('message', 'Invalid Password')); // redirect back to login page
                    }
                    // User and password both match, return user from done method
                    // which will be treated like success
                    return done(null, sponsor);
                }
            );

        })
    );


    var isValidPassword = function(sponsor, password){
        return bCrypt.compareSync(password, sponsor.password);
    }
    
}